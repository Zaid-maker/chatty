name: CI 🚀

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

# Add concurrency to cancel previous runs
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  quality:
    name: Quality Checks 🔍
    runs-on: ubuntu-latest
    permissions: # Add permissions for push
      contents: write
    steps:
      - uses: actions/checkout@v3

      - name: 🥟 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📦 Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            **/node_modules
            ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: 🔒 Setup Snyk
        uses: snyk/actions/setup@master
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}

      - name: 🔒 Security audit
        run: |
          cd server && bun snyk test
          cd ../client && bun snyk test
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        continue-on-error: true  # Optional: prevents CI failure on security issues

      - name: 🛠️ Install Global Dependencies
        run: bun install -g eslint prettier

      - name: 📝 Lint server
        working-directory: ./server
        run: |
          bun install
          bunx eslint .

      - name: 📝 Lint client
        working-directory: ./client
        run: |
          bun install
          bunx eslint .
        continue-on-error: true

      - name: 🎨 Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: 🎨 Fix formatting
        run: |
          cd server && bunx prettier --write .
          cd ../client && bunx prettier --write .

      - name: 🔍 Check for changes
        id: git-check
        run: |
          git status --porcelain
          echo "changes=$(git status --porcelain | wc -l)" >> $GITHUB_OUTPUT

      - name: 📝 Commit & Push changes
        if: steps.git-check.outputs.changes > 0
        run: |
          git add .
          git commit -m "🎨 style: format code with prettier"
          git push

      - name: 🎨 Check formatting
        run: |
          cd server && bunx prettier --check .
          cd ../client && bunx prettier --check .

  build:
    name: Build & Deploy 🚀
    runs-on: ubuntu-latest
    needs: [quality]
    
    steps:
      - uses: actions/checkout@v3

      - name: 🥟 Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: 📦 Install dependencies
        run: |
          cd server && bun install
          cd ../client && bun install

      - name: 🏗️ Build client
        working-directory: ./client
        run: bun run build

      - name: 📊 Analyze bundle size
        working-directory: ./client
        run: ANALYZE=true bun run build

      - name: 🚀 Build server
        working-directory: ./server
        run: bun run build

      - name: 🌐 Install Chrome and Xvfb
        run: |
          wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
          sudo apt-get update
          sudo apt-get install -y ./google-chrome-stable_current_amd64.deb xvfb

      - name: 📊 Install Lighthouse
        run: bun install -g lighthouse

      - name: 🚀 Start preview server
        working-directory: ./client
        run: |
          bun run build
          bun run preview & sleep 5

      - name: 📈 Run Lighthouse check with Xvfb
        run: |
          xvfb-run --auto-servernum lighthouse http://localhost:4173 \
            --chrome-flags="--headless --no-sandbox --disable-gpu" \
            --output html --output-path ./lighthouse-report.html

      - name: 📊 Upload Lighthouse report
        uses: actions/upload-artifact@v4
        with:
          name: lighthouse-report
          path: lighthouse-report.html

      - name: 📦 Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build
          path: |
            client/dist
            server/dist
